1.0.0: Initial
1.1.0: Added GetEntitySet to IDomainContext
1.2.0: Fixed SaveNavigation - now either adds or updates navigation properties + added AddOrUpdate to IEntitySet
1.2.1: Fixed bug in Load/Save navigation.
1.3.0: Removed UpdateWithoutCheck from IEntitySet, added events that enable access control and operations on change/delete/get.
1.4.0:
	* Added more specific exception types,
	* Added events for get, add/modify, delete that also enable blocking operations based on entity
	* Added reduction to MongoDb adapter, initial results are not faster than using in-memory aggregation
	* Improved tests
1.4.1:
	* MongoDb adaptor: Version 1.4.1 fixed bug in Update() of value to null in MongoDb wrapper.
1.4.2:
	* MongoDb adaptor: More reduction support and tests
	* Redis adaptor: Rolled back to ServiceStack.Redis version 3.9.71 due to license limitations on v4 that prevent bulk testing
1.4.3:
	* MongoDb: Added update and increment of single field operations
1.5.0:
	* Main: added a new assembly for shared code between the NoSQL types
	* MongoDb adaptor, Redis adaptor: Refactored to share LoadNavigation, SaveNavigation code
	* MongoDb adaptor: Added support for KnownDataTypesAttribute as an alternative to BsonKnownTypes
		usage: list of concrete types e.g. [KnownDataTypes(typeof(MyChildClass1), typeof(MyChildClass1)]
	* MongoDb adaptor: Added support for KnownDataTypesResolverAttribute as an alternative to BsonKnownTypes
		usage: list of types from which a list of assemblies is generated, from which all inheriting types are searched for
			e.g. [KnownDataTypesResolver(typeof(MyBaseType1)] - typeof(MyBaseType1).Assembly will be used to search for all types
2.0.0:
	* Changed namespace from Experiments.Repositories to PubComp.NoSql (and moved location in CodePlex.com)
	* Changed MongoDb implementation due to methods previously in use becoming obsolete

2.1.0:
	* MongoDb adaptor: Enabled map reduce on named collection, to support map reduction of a map reduce result
	* MongoDb adaptor: Enabled getting an entity set by name
	* MongoDb adaptor: Added generic type for reduction results (ReductionResult<,>)

2.2.0:
	* MongoDb adaptor: Added AddIndex() method to entity set, to enable adding indexes to map reduce results/named collections
	* Tested with MongoCSharpDriver 1.10.0

2.3.0:
	* MongoDb adaptor: DbIgnore now works with inheritance
	* Redis adaptor: DbIgnore now works with inheritance

2.3.1:
	* MongoDb adaptor: Fixed update for complex properties

2.3.2:
	* MongoDb adaptor: Fixed DateTime and DateTime? serialization issue with non-UTC times

2.3.3:
	* MongoDb adaptor: Fixed update (single) field for complex properties

2.3.4:
	* MongoDb adaptor: Small change to ReductionResult - implements IEntity<TKey> now

2.3.5:
	* MongoDb adaptor: Enable map-reduce without query (with null query) and without finalize function (with null finalize function)

2.4.0:
	* MongoDb adaptor: Exposed optional output DB name and input sort by for map-reduce + added optional dbName to Context.GetEntitySet()

2.5.0:
	* MongoDb adaptor: Replaced MongoDB C# client v1.10 with v2.0-legacy API (required some code changes)
	Will not move to new API until v2.1 or above due to limitations with new API
	(No LINQ support - https://groups.google.com/forum/#!searchin/mongodb-user/iqueryable/mongodb-user/fyRzbJNl03M/M7Fh-U1qVUQJ)
	* Added support for multiple hosts and for login DB to connection info

3.0.0:
	* Core: Changed exceptions members to enable storing multiple entities instead of one
	* MongoDb adaptor: Changed write operations (e.g. add, update) to check response and throw exception on failure,
	this enables safe usage of replica sets
	
Upcoming features:
Service layer including modify date, state, upsert, roles, rest (odata) queries and more
